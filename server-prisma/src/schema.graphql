# import Movie, Genre, Rating, Tag, Query.movies from "./generated/prisma.graphql"

type Query {
  movie(id: ID!): Movie
  genre(id: ID!): Genre
  rating(id: ID!): Rating
  tag(id: ID!): Tag
  allGenres: [SimpleGenre]!
  allRatings: [SimpleRating]!
  allTags: [SimpleTag]!
  user(id: ID!): User
  me: PrivateUser
}

type Mutation {
  signup(email: String!, password: String!, name: String!): AuthPayload!
  login(email: String!, password: String!): AuthPayload!
  addMovie(title: String!, prodCode: String!, genre: String!, rating: String!, tags: [String]!): Movie!
  deleteMovie(id: ID!): Movie!
  updateMovie(id: ID!, title: String, prodCode: String, rating: String, genre: String, tags: [String!], replaceTags: Boolean, createdBy: String): Movie!
}

type Subscription {
  feedSubscription: MovieSubscriptionPayload!
}

type AuthPayload {
  token: String!
  user: PrivateUser!
}

# For public use. It does not expose password or email.
type User {
  id: ID!
  name: String!
  movies: [Movie!]!
}

# For private use. It does not expose password.
type PrivateUser {
  id: ID!
  email: String!
  name: String!
  movies: [Movie!]!
}

# Does not include Movies link
type SimpleGenre {
  id: ID!
  code: String!
  description: String!
}

# Does not include Movies link
type SimpleRating {
  id: ID!
  rating: String!
  description: String!
}

# Does not include Movies link
type SimpleTag {
  id: ID!
  category: String!
  tag: String!
  name: String!
  description: String!
}
